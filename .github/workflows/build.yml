name: Build Game Packages

on:
  push:
    tags:
      - 'v*'  # Run when a tag is pushed with format v1.0.0, etc.

# Add explicit permissions for the GITHUB_TOKEN
permissions:
  contents: write  # This is required for creating releases and uploading assets

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: SpaceConquer-Linux
          - os: windows-latest
            asset_name: SpaceConquer-Windows
          - os: macos-latest
            asset_name: SpaceConquer-macOS

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame numpy pyinstaller Pillow
        
    - name: Debug directory structure (Unix)
      if: runner.os != 'Windows'
      run: |
        ls -la
        ls -la images/ || echo "images directory not found"
        
    - name: Debug directory structure (Windows)
      if: runner.os == 'Windows'
      run: |
        dir
        dir images\ || echo "images directory not found"
        
    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Use --noconsole instead of --windowed for Windows
        pyinstaller --name=SpaceConquer --onefile --noconsole --add-data="images;images" --add-data="sounds;sounds" --add-data="music;music" main.py
        
        # Create a batch file for one-click running
        echo "@echo off" > dist/run_game.bat
        echo "start SpaceConquer.exe" >> dist/run_game.bat
        
    - name: Build with PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # For macOS, use --windowed
        pyinstaller --name=SpaceConquer --onefile --windowed --add-data="images:images" --add-data="sounds:sounds" --add-data="music:music" main.py
        
        # Create a shell script for one-click running
        echo '#!/bin/bash' > dist/run_game.sh
        echo 'cd "$(dirname "$0")"' >> dist/run_game.sh
        echo 'chmod +x ./SpaceConquer' >> dist/run_game.sh
        echo './SpaceConquer' >> dist/run_game.sh
        chmod +x dist/run_game.sh
        
    - name: Build with PyInstaller (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        # For Linux, don't use --windowed
        pyinstaller --name=SpaceConquer --onefile --add-data="images:images" --add-data="sounds:sounds" --add-data="music:music" main.py
        
        # Create a shell script for one-click running
        echo '#!/bin/bash' > dist/run_game.sh
        echo 'cd "$(dirname "$0")"' >> dist/run_game.sh
        echo 'chmod +x ./SpaceConquer' >> dist/run_game.sh
        echo './SpaceConquer' >> dist/run_game.sh
        chmod +x dist/run_game.sh
        
    - name: Create Release Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p release
        cp dist/SpaceConquer.exe release/
        cp dist/run_game.bat release/
        cp README.md LICENSE CHANGELOG.md release/
        cd release
        7z a -tzip "../${{ matrix.asset_name }}.zip" *
        
    - name: Create Release Package (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p release
        cp dist/SpaceConquer release/
        cp dist/run_game.sh release/
        cp README.md LICENSE CHANGELOG.md release/
        chmod +x release/SpaceConquer
        chmod +x release/run_game.sh
        cd release
        zip -r "../${{ matrix.asset_name }}.zip" *
        
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.asset_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
